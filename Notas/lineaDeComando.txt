














>>>4 > 6-routes

root :to=> "demo#index"



>>>6 >6_GenerateMigra.mp4
rails generate<<lista de cosas que puedo generar

rails generate migration DoNothingYet<< crea un migracion de prueba, se crea la carpeta "db/migrate" la fecha_nombre_de_migracion.rb

rails generate model User << crea la migracion para para User, crea un archivo donde se escribira la tabla que se ha de crear, usar CamelCase, se crea el archivo db/migrate/fecha_create_user.rb, aqui se debe escribir lo necesari para crear la base de datos
    
    create_table :users do |t|#este es un bucle que crea las tablas de la base de datos
    	t.string "firt_name"
    		#el id se crea por defecto
    		#crea la tabla first_name
    		#t.colunm "name", :type, options//crea una tabla con opciones.
    		#ejemplo
    		#:limit => size
    		#:default => value
    		#:null => true/false
    		#:precision => number
    		#:scale => number
      t.timestamps

    create_table :users do |t| #create_table :users, :id=>false do |t|#hace q no cree el id por defecto	
		t.string "first_name", :limit=>25
		t.string "last_name", :limit=>50
		t.string "email", :default=>"",:null=>false
		t.string "password", :limit=>40
		t.timestamps
	end


>>6 >7_runmigration
rake db:migrate RAILS:ENV=production # te cambia elentorno de la migracion a produccion.

rake db:migrate #te migra los script y los conviert en tablas

rake db:migrate VERSION=0 #regresa la tabla a su origen, borra todo

rake db:migrate VERSION=20130717145102 # de la carpeta db/migrate/archivo, se escribe el numero para migrar solo esta version

rake db:migrate:up VERSION=354848 # solo te migra esta version
 
rake db:migrate:down VERSION=324324324 #te borra de la tabla esta version.

rake db:migrate:redo VERSION=3213545 #borra y vuelve a crear la migracion.

rake -T #muestra las tereas q uedes hacer
rake -D db:migrate #muestra la lista de las csas que puedes hacer


>>6 > 8_MigratMethods
rails generate migrations AlterUsers # te crea un migrate para alterar la tabla users.


>>7 > 4_CreateRecords

rails console #ingresas a la consola de rails, debes estar en la carpeta

subject= Subject.new #crea una instancia del modelo para llenar tablas.
# devuelve valoresm si id=nil, entonces es una record nuevo.

subjet.new_record? #hace una pregunta pra saber si es una neuva record. "true" si es nuevo.

subject.name="algo" # se guarda "algo" en name y se guarda en memoria.

subject = Subject.new(:name=>"first subject", :position =>1, visible=>true) # cracion de un elemento en una sola linea.

subject.save #guarda el subject agregado.

subject= Subject.create(:name=>"second subject", :position => 2) #crea una nueva fila.



>>7 > 5_UpdateRecords

rails console

subject = Subject.find(1) #hace una busqueda por ID y se guarda en subject la fila completa

subjec.name ="Nuevo nombre" #hace un cambio temporal de .name y lo guarda en memoria.

subject.save #guardo los cambios.

subject.find(2) #se busca la fila 2 para actualziar todo de una.

subject.update_attributes(:name=>"updates", visible=>true) #esto actualiza y guarda los cambios.

>>7 > 6_DeleteRecords

rails c

Subject.create(:name="Bad subject") #crea uno nuevo y lo guarda.

subject = Subject.fin(3) #buscamos el row 3 y hacemos instancia para intereactuar.

subject.destroy #borra la fila de la base de datos.

subject.frozen? #pegunta si ha guardado la fila en memoria

>>7 > 7_FindRecords

Subject.find(2)

Subject.find_by_id(2), Subject.find_by_LOQUEQUIERBUSCAR("el valor a buscar")

Subject.find_by_name("first name") #busca la fila que haga match

Subject.all #busca todo y retorna un array de objetos

Subject.first, Subject.last #busca el ultimo y primero

>>7 > 8_conditions

Subject.where(:visible=>true) #buscado condicoinal

Subject.where(:visible=>true).order("position ASC")

tipos de query

-String
    "name='first name' AND visible=true"
    felixble war sql
    beware SQL injection

- Array
    ["name=? AND visible=true", "first name"]
    felixble escaped sql
    safe from sql injection

- Hash
    {:name=>"fisrt subject", :visible=>true}
    simple escaped sql
    safe from SQL injection

ejemplos
hash
subjects = Subject.where({:visible=>true})

array
subjects= Subject.where(["visible=?", true])

Subject.where(:visible=>true, :position=>1)

subjects.class
subjects.to_sql

Subject.where(:visible=>true, :position=>1).first

subjects= Subject.scoped # no records

>> 7> 9_OrderLimit

Subject.order("position ASC").limit(20).offset(40)

>>7 > 10_NamedScopes
en /model/subject.rb
    
    scope :visible, -> {where(:visible => true)}
    #en la consola
    subjects=Subject.visible
    scope :search, lambda{|query| where(["name LIKE ?","%#{query}%"])} #esta es una busqueda personalizada
    scope :search, lambda{|first, last| where(:first_name=>first, :last_name=>last)}



>>8 >2_OneToOne

    /model/Subject.rb
    has_one :page

    /model/page.rb
    belongs_to :subject
    #belongs_to :subject,{:foreing_key=>"subject_id"}

    #en consola.
    subject=Subject.find(1)

    first_page = Page.new(creamos una pagina)
    
    first_page.subject
    =>nil #es por q aun noe sta asociado
    
    subject.page = first_page #asi se genera la relacion foreing key

    first_page.subject #retorna la fila ya relacionada
    subject.page #retorna la fila ya relacionada

    subject.page.destroy # elimina toda la fial de page




>> 8 >3_OneToMany

    /model/Subject.rb
    has_many :pages # en plural ya q tiene muchos pages

    /model/page.rb
    belongs_to :subject #singular x q aun tiene un solo padre

    subject.pages
    subject.pages <<page
    subject.pages = [page, page, page]
    subject.pages.delete(page)
    subject.pages.clear
    subject.pages.empty?
    subject.pages.size

    #ejemplo
    subject=Subject.find(1)
    first_page=Page.new(creo la pagina)
    subject.pages<<first_page #relaciono el page con subject id=1, se autoguarda en la base de datos
    subject.pages.delete(first_page) #te borra la relacion, pero no de la tabla




>> 9 > 1

 rails generate controller Subjects (en plural)



>> 10 >2 _partial

form_for(:subject, :url => {:action => 'update', :id => @subject.id} do |f|)
render(:partial=> "form", :locals => {:f=>f})
render(:partial=> "demo/form", :locals => {:f=>f}) #si el partial esta en otra ubicacion


>>10 > 5 images
image_tag('rails.png', :size=>'50x60', :alt => 'raolslogo')




rails generate active_admin:resource [MyModelName]

rails generate uploader Bannerhome (en singular)

rails destroy model <model_name>


  <%= link_to("Show", {:action => 'show', :id => subject.id}, :class => 'action show') %>
  <%= link_to("Edit", {:action => 'edit', :id => subject.id}, :class => 'action edit') %>
  <%= link_to("Delete", {:action => 'delete', :id => subject.id}, :class => 'action delete') %>

gem install mysql2 -- '--with-mysql-lib="c:\mysql\lib" --with-mysql-include="c:\mysql\include"'
gem install mysql2 -v 0.3.13 -- '--with-mysql-lib="c:\mysql\lib" --with-mysql-include="c:\mysql\include"'

gem install mysql2 -- '--with-mysql-lib="/home/pruebas/descarga/mysql/lib" --with-mysql-include="/home/pruebas/descarga/mysql/include"'





sudo apt-get install git-core

Capistrano 
bundle exec capify .
cap deploy:check
cap deploy

$ cat /tmp/id_rsa.john.pub >> ~/.ssh/authorized_keys

ssh root@192.241.202.118 'ls -l /home'

sudo apt-get install mysql-server mysql-common mysql-client


Your Droplet's password has been reset to: gjlexarrojrj


/home/#{application}

/etc/nginx/nginx.conf. #configuracion nginx
/etc/nginx/sites-enabled

Have you tried (as root):
/etc/init.d/
service nginx restart
-or-
service nginx stop && service nginx start

--
Kevin Worthington


ssh -A 192.241.202.118 'env | grep SSH_AUTH_SOCK'
ssh root@192.241.202.118 'ls -lR /var/www/'

gem install thin
thin install
/usr/sbin/update-rc.d -f thin defaults

thin config -C /etc/thin/whh -c /var/www/whh --servers 3 -e development # or: -e production for caching, etc

ln -nfs /etc/nginx/sites-available/whh /etc/nginx/sites-enabled/whh

ln -nfs /etc/nginx/sites-available/hachastudio.com /etc/nginx/sites-enabled/hachastudio.com

/etc/init.d/thin restart
/etc/init.d/nginx reload
/etc/init.d/nginx restart



cd ~/.ssh
ssh-keygen -t rsa -C "rrdriguez@phantasia.pe"


ps aux | grep ruby
kill -9 [id]

rename file mv old-file-name  new-file-name

rm command syntax
rm -f -r {file-name}
-f: Forcefully remove file
-r: Remove the contents of directories recursively

thin start -e development -s3 -S /tmp/web.sock
thin stop -e development -s3 -S /tmp/web.sock

thin restart -e development -S /tmp/microondas.sock -s3

mysql -uroot -p123456 whh_development < /var/www/whh/whh_development.sql;



layout "pagina"


C:\Users\Rrodriguez\AppData\Roaming\npm

mysql -u root -p ae45d876e27a2bb406607423b9045853 wiki_ghost_db < /var/www/nginx/2013/wiki_phantasia_ghost/ghost_db.sql

mysql -u root -p ae45d876e27a2bb406607423b9045853

whereis nginx
/usr/local/nginx/

ln -nfs /etc/nginx/sites-available/whh /etc/nginx/sites-enabled/whh

sudo ln -nfs /usr/local/nginx/sites-enabled/wiki-ghost-development.phantasial.pe /usr/local/nginx/sites-available/wiki-ghost-development.phantasial.pe

sudo ln -s /etc/nginx/sites-enabled/example.com example.com
sudo ln -nfs /etc/nginx/sites-available/ol.hachastudio.com /etc/nginx/sites-enabled/ol.hachastudio.com 

sudo ln -nfs /etc/nginx/sites-available/hachastudio.com /etc/nginx/sites-enabled/hachastudio.com 

sudo ln -nfs /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default

sudo ln -nfs /usr/local/nginx/sites-enabled/wiki-ghost-development.phantasial.pe /usr/local/nginx/sites-available/wiki-ghost-development.phantasial.pe


sudo nginx -s reload
sudo nginx -s stop
sudo service nginx start
thin stop -e development -s3 -S /tmp/microondas.sock
thin start -e development -s3 -S /tmp/microondas.sock

thin stop -e production -s3 -S /tmp/microondas.sock
thin start -e production -s3 -S /tmp/olivatomato.sock

thin start -e development -s3 -S /tmp/hacha.sock


thin stop -e development -s3 -S unix:/tmp/olivatomato.sock
thin start -e development -s3 -S unix:/tmp/olivatomato.sock

thin stop -e development -s3 -S unix:/tmp/thin.sock

thin start -s3 --socket /tmp/olivatomato.sock

ps aux  | grep rails

thin start -e development -p3000 -s5

4.- For the Quick & Dirty:
thin start -e development -p 3000 -s 5 -d
Where:
-e == Environment in this case development
-p == TCP/IP Port in this case 3000
-s == Instances of the webserver in this case 5
-d == Daemonize to run in background
[me@fedora phonebook]$ thin start -e development -p 3000 -s 5 -d
Starting server on 0.0.0.0:3000 ... 
Starting server on 0.0.0.0:3001 ... 
Starting server on 0.0.0.0:3002 ... 
Starting server on 0.0.0.0:3003 ... 
Starting server on 0.0.0.0:3004 ... 
[me@fedora phonebook]$
We just start 5 instances of the Thin Web Server on ports [3000..3004]
Open your browser on:
http://127.0.0.1:3000
http://127.0.0.1:3001
http://127.0.0.1:3002
http://127.0.0.1:3003
http://127.0.0.1:3004




## Instalar en development
  - El site esta actualmente en esta ruta  <`http://samsung-microondas-landing.development.phantasia.pe`>.
  - En caso de actualizaciones hacer un `git pull, git push`
  - La ubicación en development es `/var/www/nginx/2013/samsung/samsung_microondas_landing`
  - Para levantar proyecto ejecutar en consola: `thin start -e development -s3 -S /tmp/microondas.sock`
  - Para detener proyecto ejecutar en consola: `thin stop -e development -s3 -S /tmp/microondas.sock`

### Configuración nginx en development
  - El arhivo esta en `/usr/local/nginx/sites-enabled`
  
      `
      server {
        listen 80;
        listen 443 ssl;

        root /var/www/nginx;
        server_name samsung-microondas-landing.development.phantasia.pe;
        index index.html index.htm index.php;

        error_log /var/log/nginx.dev.error.log;
        access_log /var/log/nginx.dev.log;

        client_max_body_size 6M;

        ssl_certificate /home/certificado_ssl/star_phantasia_pe.pem;
        ssl_certificate_key /home/certificado_ssl/star_phantasia_pe.key;

        ssl_session_timeout 5m;

        ssl_protocols SSLv3 TLSv1;
        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
        ssl_prefer_server_ciphers on;

        tcp_nodelay on;

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
          root /usr/share/nginx/www;
        }

        location / {
          proxy_pass http://olivaytomato;
          proxy_set_header Host $host;
        }
      }
      `
    
  - El arhivo upstream esta en `/usr/local/nginx`
    `
upstream olivaytomato {
    server unix:/tmp/olivatomato.0.sock;
    server unix:/tmp/olivatomato.1.sock;
    server unix:/tmp/olivatomato.2.sock;
}
    `


thin start -s3 --socket /tmp/thin.sock
upstream  backend {
   server   unix:/tmp/thin.0.sock;
   server   unix:/tmp/thin.1.sock;
   server   unix:/tmp/thin.2.sock;
}








bundle exec thin start -e production -S /tmp/ol.sock -s3


thin start -e development -s3 -S uni:/tmp/ol.sock


lsof -wni tcp:3000
kill -9 # fueza el cierre


sudo apt-get install nginx
sudo service nginx start
sudo service nginx restart
ifconfig eth0 | grep inet | awk '{ print $2 }'
update-rc.d nginx defaults

You may see a message like:
System start/stop links for /etc/init.d/nginx already exist.


gem install mysql2 -v0.3.13 -- '--with-mysql-lib="/var/www/hacha/mysql/lib" --with-mysql-include="/var/www/hacha/mysql/include"'
sudo apt-get install libmysql-ruby libmysqlclient-dev
gem install rails -v 3.2.10



To install forever type npm install forever -g
To start Ghost using forever from the Ghost installation directory type 
    NODE_ENV=production forever start index.js
To stop Ghost type forever stop index.js
To check if Ghost is currently running type forever list



// android

;%JAVA_HOME%\bin;%ANT_HOME%\bin;C:\adt-bundle\sdk\platform-tools;C:\adt-bundle\sdk\tools

cordova platform add android
phonegap build android



;C:\adt-bundle\sdk\platform-tools;C:\adt-bundle\sdk\tools


C:\wamp\RailsInstaller\Ruby1.9.3\bin;C:\Users\Rrodriguez\AppData\Roaming\np;C:\wamp\bin\mysql\mysql5.5.24\bin;C:\Users\Rrodriguez\AppData\Roaming\npm;C:\adt-bundle\sdk\platform-tools;C:\adt-bundle\sdk\tools;%JAVA_HOME%\bin;%ANT_HOME%\bin



;%JAVA_HOME%;%ANT_HOME%\bin


<<<<<<< HEAD
"C:\Program Files (x86)\Git\bin\sh.exe" --login -i
=======

function randomInteger(min, max){
    return Math.floor(Math.random() * (1 + max - min) + min);
}
>>>>>>> d70d0ff3c1ef1087bfebb3379df823d783b89b85
